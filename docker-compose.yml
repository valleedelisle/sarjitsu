version: '2'
services:
  redis:
    image: "redis:alpine"
    ports:
    - "${CACHE_PORT}:${CACHE_PORT}"
  metricstore:
    build:
      context: lib/metricstore
    env_file: .env
    image: sarjitsu:metricstore_official
    expose:
    - "${DB_PORT}"
    environment:
      - POSTGRESQL_PASSWORD=${DB_PASSWORD}
      - POSTGRESQL_USER=${DB_USER}
      - POSTGRESQL_DATABASE=${DB_NAME}
    ports:
    - "${METRICSTORE_PORT_MAPPING}:${DB_PORT}"

  datasource:
    build:
      context: lib/datasource
      args:
        ES_PORT: $ES_PORT
        ES_JVM_HEAP: $ES_JVM_HEAP
    ulimits:
      nproc: 65536
      nofile:
        soft: 65536
        hard: 65536
    privileged: true
    env_file: .env
    image: sarjitsu:elasticsearch_new
    ports:
    - "${DATASOURCE_PORT_MAPPING}:${ES_PORT}"

  frontend:
    env_file: .env
    image: localhost/sarjitsu/grafana
    ports:
    - "${FRONTEND_PORT_MAPPING}:${GRAFANA_PORT}"
    links:
     - metricstore
     - datasource
    depends_on:
     - metricstore
     - datasource

  middleware:
    env_file: .env
    image: localhost/sarjitsu/middleware
    ports:
    - "${MIDDLEWARE_PORT_MAPPING}:${MIDDLEWARE_PORT}"
    privileged: true
    depends_on:
     - datasource
    links:
     - datasource
     - metricstore
     - frontend

  web:
    restart: always
    env_file: .env
    image: localhost/sarjitsu/backend
    ports:
    - "${BACKEND_PORT_MAPPING}:${BACKEND_SERVER_PORT}"
    depends_on:
     - metricstore
     - datasource
     - redis
     - frontend
     - middleware
    links:
     - metricstore
     - datasource
     - frontend
     - middleware
     - redis

  nginx:
    restart: always
    image: localhost/sarjitsu/nginx
    ports:
    - "${PROXY_PORT_MAPPING}:${PROXY_PORT}"
